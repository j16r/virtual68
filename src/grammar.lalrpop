// -*- mode: rust -*-
// vi: set ft=rust :

use std::str::FromStr;
use ast::Instruction;
use ast::Instruction::*;
use opcode::Opcode::*;

grammar;

pub Program: Vec<Instruction> = {
    <v:(<Instruction> ";")*> <e:Instruction?> => match e {
        None => v,
        Some(e) => {
            println!("Got {:?}, {:?}", e, v);
            let mut v = v;
            v.push(e);
            v
        }
    }
};

Instruction: Instruction = {
    <r"[a-z]+"> "b" => match <> {
        "asl" => OperandB(ASL_B),
        "asr" => OperandB(ASR_B),
        "clr" => OperandB(CLR_B),
        "com" => OperandB(COM_B),
        "dec" => OperandB(DEC_B),
        "inc" => OperandB(INC_B),
        "lsr" => OperandB(LSR_B),
        "neg" => OperandB(NEG_B),
        "pull" => OperandB(PUL_B),
        "push" => OperandB(PSH_B),
        "rol" => OperandB(ROL_B),
        "ror" => OperandB(ROR_B),
        "tst" => OperandB(TST_B),
        _ => panic!("unrecognized opcode"),
    },
    <r"[a-z]+"> "a" => match <> {
        "adc" => OperandA(ADC_A),
        "add" => OperandA(ADD_A),
        "and" => OperandA(AND_A),
        "bit" => OperandA(BIT_A),
        "cmp" => OperandA(CMP_A),
        "cpx" => OperandA(CPX_A),
        "eor" => OperandA(EOR_A),
        "lda" => OperandA(LDA_A),
        "ora" => OperandA(ORA_A),
        "push" => OperandA(PSH_A),
        "sbc" => OperandA(SBC_A),
        "sub" => OperandA(SUB_A),
        _ => panic!("unrecognized opcode"),
    },
    <r"[a-z]+"> => match <> {
        "nop" => OperandNone(NOP),
        "tap" => OperandNone(TAP),
        "tpa" => OperandNone(TPA),
        "inx" => OperandNone(INX),
        "dex" => OperandNone(DEX),
        "clv" => OperandNone(CLV),
        "sev" => OperandNone(SEV),
        "clc" => OperandNone(CLC),
        "sec" => OperandNone(SEC),
        "cli" => OperandNone(CLI),
        "sei" => OperandNone(SEI),
        "sba" => OperandNone(SBA),
        "cba" => OperandNone(CBA),
        "tab" => OperandNone(TAB),
        "tba" => OperandNone(TBA),
        "daa" => OperandNone(DAA),
        "aba" => OperandNone(ABA),
        "tsx" => OperandNone(TSX),
        "ins" => OperandNone(INS),
        "des" => OperandNone(DES),
        "txs" => OperandNone(TXS),
        "rts" => OperandNone(RTS),
        "rti" => OperandNone(RTI),
        "wai" => OperandNone(WAI),
        "swi" => OperandNone(SWI),
        "neg" => OperandNone(NEG),
        _ => panic!("unrecognized opcode"),
    }
};
